events{}

http {
    include /etc/nginx/mime.types;

    server_tokens off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    resolver 127.0.0.11 valid=30s;
    server {
        listen 80;
        server_name birdegop.ru;
        client_max_body_size 50M;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        
        # сутки
        proxy_connect_timeout 86400;
        proxy_send_timeout 86400;
        proxy_read_timeout 86400;
        send_timeout 86400;
        
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        
        location /prometheus {
            return 301 http://$host:55055;
        }
        
        location /grafana {
            return 301 http://$host:50555;
        }
        
        location ^~ / {
            set $upstream frontend:80;
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =200 /frontend-down;
        }
        
        location ^~ /api/ {
            set $upstream main-server:80;
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =400 /down;
        }
        
        location ^~ /coderunner/ {
            set $upstream coderunner:80;
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =400 /down;
        }
        
        location ^~ /kafka/ {
            set $upstream akhq:8080;
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =400 /down;
        }
        
        location ^~ /kafka2/ {
            set $upstream kafka-ui:8080;
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =400 /down;
        }
        
        location ^~ /logs/ {
            set $upstream seq:80;
            rewrite ^/logs(.*)$ $1 break;
            proxy_pass http://$upstream;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            error_page 502 =400 /down;
        }
        
        location /down {
            internal;
            add_header Content-Type "application/json";
            add_header Access-Control-Allow-Headers "*";
            add_header Access-Control-Allow-Methods "*";
            add_header Access-Control-Allow-Origin  "*";
            return 400 '{"error": "Server is down :( Sorry!"}';
        }
        
        location /frontend-down {
            internal;
            add_header Content-Type "text/plain";
            add_header Access-Control-Allow-Headers "*";
            add_header Access-Control-Allow-Methods "*";
            add_header Access-Control-Allow-Origin  "*";
            return 200 'Egop Interactive Course Platform is down, please report to Egop.';
        }
    }
}